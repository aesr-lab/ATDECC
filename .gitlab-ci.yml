variables:
#  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DISTRO: unstable
  GIT_SUBMODULE_STRATEGY: recursive

#cache:
#  paths:
#    - .cache/pip
#    - venv/

stages:
  - prepare
  - build
  - test
  - debian
  - deploy


.build_x86_64:
  variables:
    ARCH: x86_64
  tags:
    - docker
    - aesrl
    - x86_64

.build_arm64:
  variables:
    ARCH: arm64
  tags:
    - docker
    - aesrl
    - arm64

.build_armhf:
  variables:
    ARCH: arm
  tags:
    - docker
    - aesrl
    - armhf


.python:
  before_script:
    - apt-get update -qq && apt-get install cmake build-essential libclang1-15 libclang-dev libpcap-dev python3-venv python3-dev -yy
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
#    - pip freeze > requirements.txt
#  only:
#    - merge_requests

.build_python:
  stage: prepare
  extends: .python
  script:
    - make -j$(nproc) -C src/atdecc
  artifacts:
    paths:
      - src/

build_python_x86_64:
  extends:
    - .build_python
    - .build_x86_64

build_python_arm64:
  extends:
    - .build_python
    - .build_arm64

..build_python_armhf:
  extends:
    - .build_python
    - .build_armhf


.build_wheel:
  stage: build
  extends: .python
  script:
    - python -m build
  artifacts:
    paths:
      - dist/

build_wheel_x86_64:
  extends:
    - .build_wheel
    - .build_x86_64
  dependencies:
    - build_python_x86_64

build_wheel_arm64:
  extends:
    - .build_wheel
    - .build_arm64
  dependencies:
    - build_python_arm64

..build_wheel_armhf:
  extends:
    - .build_wheel
    - .build_armhf
  dependencies:
    - build_python_armhf


test_python_x86_64:
  stage: test
  extends:
    - .python
    - .build_x86_64
  dependencies:
    - build_python_x86_64
  variables:
    LD_LIBRARY_PATH: $CI_PROJECT_DIR/src/atdecc
  script:
    - pytest


.build_debian:
  stage: debian
  variables:
    LD_LIBRARY_PATH: $CI_PROJECT_DIR/src/atdecc
  before_script:
    - apt-get update -qq && apt-get install git devscripts equivs python3-venv python3-dev -yy
  script:
    - make builddeps
    - make -j$(nproc) debpkg
  after_script:
    - mv ../atdecc-py_* .
  artifacts:
    paths:
      - ./${CI_PROJECT_NAME}*.deb
    expire_in: 1h

.build_debian_scheduled:
  extends: .build_debian
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

build_debian_x86_64:
  extends:
    - .build_debian
    - .build_x86_64
  dependencies:
    - build_python_x86_64

build_debian_arm64:
  extends:
    - .build_debian
    - .build_arm64
  dependencies:
    - build_python_arm64

..build_debian_armhf:
  extends:
    - .build_debian
    - .build_armhf
  dependencies:
    - build_python_armhf


upload:
  stage: deploy
  tags:
    - docker
    - aesrl-website
  before_script:
    - apt-get update -qq
    - apt-get install lftp curl -yy
  script:
    - ./upload.sh debian/incoming/$DISTRO
    - echo curl --fail --request POST --form token=$DEBIAN_TRIGGER_TOKEN --form ref=main "https://gitlab.mdw.ac.at/api/v4/projects/$DEBIAN_PROJECT_ID/trigger/pipeline"
    - curl --fail --request POST --form token=$DEBIAN_TRIGGER_TOKEN --form ref=main "https://gitlab.mdw.ac.at/api/v4/projects/$DEBIAN_PROJECT_ID/trigger/pipeline"
